# 1 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
# 23 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
# 1 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.h" 1
# 26 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.h"
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/inttypes.h" 1 3
# 37 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/inttypes.h" 3
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stdint.h" 1 3 4
# 9 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stdint.h" 3 4
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/stdint.h" 1 3 4
# 125 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/stdint.h" 3 4

# 125 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/stdint.h" 3 4
typedef signed int int8_t __attribute__((__mode__(__QI__)));
typedef unsigned int uint8_t __attribute__((__mode__(__QI__)));
typedef signed int int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int uint16_t __attribute__ ((__mode__ (__HI__)));
typedef signed int int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int uint32_t __attribute__ ((__mode__ (__SI__)));

typedef signed int int64_t __attribute__((__mode__(__DI__)));
typedef unsigned int uint64_t __attribute__((__mode__(__DI__)));
# 146 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/stdint.h" 3 4
typedef int16_t intptr_t;




typedef uint16_t uintptr_t;
# 163 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/stdint.h" 3 4
typedef int8_t int_least8_t;




typedef uint8_t uint_least8_t;




typedef int16_t int_least16_t;




typedef uint16_t uint_least16_t;




typedef int32_t int_least32_t;




typedef uint32_t uint_least32_t;







typedef int64_t int_least64_t;






typedef uint64_t uint_least64_t;
# 217 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/stdint.h" 3 4
typedef int8_t int_fast8_t;




typedef uint8_t uint_fast8_t;




typedef int16_t int_fast16_t;




typedef uint16_t uint_fast16_t;




typedef int32_t int_fast32_t;




typedef uint32_t uint_fast32_t;







typedef int64_t int_fast64_t;






typedef uint64_t uint_fast64_t;
# 277 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/stdint.h" 3 4
typedef int64_t intmax_t;




typedef uint64_t uintmax_t;
# 10 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stdint.h" 2 3 4
# 38 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/inttypes.h" 2 3
# 77 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/inttypes.h" 3
typedef int32_t int_farptr_t;



typedef uint32_t uint_farptr_t;
# 27 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.h" 2
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stddef.h" 1 3 4
# 149 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 216 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stddef.h" 3 4
typedef unsigned int size_t;
# 426 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stddef.h" 3 4
typedef struct {
  long long __max_align_ll __attribute__((__aligned__(__alignof__(long long))));
  long double __max_align_ld __attribute__((__aligned__(__alignof__(long double))));
} max_align_t;






  typedef decltype(nullptr) nullptr_t;
# 28 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.h" 2


# 29 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.h"
class KeccakCore
{
public:
    KeccakCore();
    ~KeccakCore();

    size_t capacity() const;
    void setCapacity(size_t capacity);

    size_t blockSize() const { return _blockSize; }

    void reset();

    void update(const void *data, size_t size);
    void pad(uint8_t tag);

    void extract(void *data, size_t size);
    void encrypt(void *output, const void *input, size_t size);

    void clear();

    void setHMACKey(const void *key, size_t len, uint8_t pad, size_t hashSize);

private:
    struct {
        uint64_t A[5][5];
        uint8_t inputSize;
        uint8_t outputSize;
    } state;
    uint8_t _blockSize;

    void keccakp();
};
# 24 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 2
# 1 "/home/whistleblower/.platformio/lib/Crypto/Crypto.h" 1
# 27 "/home/whistleblower/.platformio/lib/Crypto/Crypto.h"
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stddef.h" 1 3 4
# 28 "/home/whistleblower/.platformio/lib/Crypto/Crypto.h" 2

void clean(void *dest, size_t size);

template <typename T>
inline void clean(T &var)
{
    clean(&var, sizeof(T));
}

bool secure_compare(const void *data1, const void *data2, size_t len);
# 25 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 2
# 1 "/home/whistleblower/.platformio/lib/Crypto/utility/EndianUtil.h" 1
# 26 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 2
# 1 "/home/whistleblower/.platformio/lib/Crypto/utility/RotateUtil.h" 1
# 27 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 2
# 1 "/home/whistleblower/.platformio/lib/Crypto/utility/ProgMemUtil.h" 1
# 27 "/home/whistleblower/.platformio/lib/Crypto/utility/ProgMemUtil.h"
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 1 3
# 89 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stddef.h" 1 3 4
# 90 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 2 3
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 1 3
# 99 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 3
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/sfr_defs.h" 1 3
# 100 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 2 3
# 272 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 3
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/iom328p.h" 1 3
# 273 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 2 3
# 627 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 3
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/portpins.h" 1 3
# 628 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 2 3

# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/common.h" 1 3
# 630 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 2 3

# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/version.h" 1 3
# 632 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 2 3






# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/fuse.h" 1 3
# 239 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/fuse.h" 3

# 239 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/fuse.h" 3
typedef struct
{
    unsigned char low;
    unsigned char high;
    unsigned char extended;
} __fuse_t;
# 639 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 2 3


# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/lock.h" 1 3
# 642 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/io.h" 2 3
# 91 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 2 3
# 116 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern "C" {
# 1158 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern const void * memchr_P(const void *, int __val, size_t __len) __attribute__((__const__));
# 1172 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int memcmp_P(const void *, const void *, size_t) __attribute__((__pure__));






extern void *memccpy_P(void *, const void *, int __val, size_t);
# 1188 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern void *memcpy_P(void *, const void *, size_t);






extern void *memmem_P(const void *, size_t, const void *, size_t) __attribute__((__pure__));
# 1207 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern const void * memrchr_P(const void *, int __val, size_t __len) __attribute__((__const__));
# 1217 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strcat_P(char *, const char *);
# 1233 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern const char * strchr_P(const char *, int __val) __attribute__((__const__));
# 1245 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern const char * strchrnul_P(const char *, int __val) __attribute__((__const__));
# 1258 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int strcmp_P(const char *, const char *) __attribute__((__pure__));
# 1268 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strcpy_P(char *, const char *);
# 1285 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int strcasecmp_P(const char *, const char *) __attribute__((__pure__));






extern char *strcasestr_P(const char *, const char *) __attribute__((__pure__));
# 1305 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t strcspn_P(const char *__s, const char * __reject) __attribute__((__pure__));
# 1321 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t strlcat_P (char *, const char *, size_t );
# 1334 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t strlcpy_P (char *, const char *, size_t );
# 1346 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t strnlen_P(const char *, size_t) __attribute__((__const__));
# 1357 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int strncmp_P(const char *, const char *, size_t) __attribute__((__pure__));
# 1376 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int strncasecmp_P(const char *, const char *, size_t) __attribute__((__pure__));
# 1387 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strncat_P(char *, const char *, size_t);
# 1401 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strncpy_P(char *, const char *, size_t);
# 1416 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strpbrk_P(const char *__s, const char * __accept) __attribute__((__pure__));
# 1427 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern const char * strrchr_P(const char *, int __val) __attribute__((__const__));
# 1447 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strsep_P(char **__sp, const char * __delim);
# 1460 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t strspn_P(const char *__s, const char * __accept) __attribute__((__pure__));
# 1474 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strstr_P(const char *, const char *) __attribute__((__pure__));
# 1496 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strtok_P(char *__s, const char * __delim);
# 1516 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strtok_rP(char *__s, const char * __delim, char **__last);
# 1529 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t strlen_PF(uint_farptr_t src) __attribute__((__const__));
# 1545 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t strnlen_PF(uint_farptr_t src, size_t len) __attribute__((__const__));
# 1560 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern void *memcpy_PF(void *dest, uint_farptr_t src, size_t len);
# 1575 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strcpy_PF(char *dest, uint_farptr_t src);
# 1595 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strncpy_PF(char *dest, uint_farptr_t src, size_t len);
# 1611 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strcat_PF(char *dest, uint_farptr_t src);
# 1632 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t strlcat_PF(char *dst, uint_farptr_t src, size_t siz);
# 1649 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strncat_PF(char *dest, uint_farptr_t src, size_t len);
# 1665 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int strcmp_PF(const char *s1, uint_farptr_t s2) __attribute__((__pure__));
# 1682 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int strncmp_PF(const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
# 1698 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int strcasecmp_PF(const char *s1, uint_farptr_t s2) __attribute__((__pure__));
# 1716 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
# 1732 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern char *strstr_PF(const char *s1, uint_farptr_t s2);
# 1744 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t strlcpy_PF(char *dst, uint_farptr_t src, size_t siz);
# 1760 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern int memcmp_PF(const void *, uint_farptr_t, size_t) __attribute__((__pure__));
# 1779 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/avr/pgmspace.h" 3
extern size_t __strlen_P(const char *) __attribute__((__const__));
__attribute__((__always_inline__)) static __inline__ size_t strlen_P(const char * s);
static __inline__ size_t strlen_P(const char *s) {
  return __builtin_constant_p(__builtin_strlen(s))
     ? __builtin_strlen(s) : __strlen_P(s);
}



}
# 28 "/home/whistleblower/.platformio/lib/Crypto/utility/ProgMemUtil.h" 2
# 28 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 2
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 1 3
# 46 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
# 1 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/5.4.0/include/stddef.h" 1 3 4
# 47 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 2 3
# 58 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern "C" {
# 125 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern int ffs(int __val) __attribute__((__const__));





extern int ffsl(long __val) __attribute__((__const__));





__extension__ extern int ffsll(long long __val) __attribute__((__const__));
# 150 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern void *memccpy(void *, const void *, int, size_t);
# 162 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern void *memchr(const void *, int, size_t) __attribute__((__pure__));
# 180 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern int memcmp(const void *, const void *, size_t) __attribute__((__pure__));
# 191 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern void *memcpy(void *, const void *, size_t);
# 203 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern void *memmem(const void *, size_t, const void *, size_t) __attribute__((__pure__));
# 213 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern void *memmove(void *, const void *, size_t);
# 225 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern void *memrchr(const void *, int, size_t) __attribute__((__pure__));
# 235 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern void *memset(void *, int, size_t);
# 248 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strcat(char *, const char *);
# 262 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strchr(const char *, int) __attribute__((__pure__));
# 274 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strchrnul(const char *, int) __attribute__((__pure__));
# 287 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern int strcmp(const char *, const char *) __attribute__((__pure__));
# 305 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strcpy(char *, const char *);
# 320 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern int strcasecmp(const char *, const char *) __attribute__((__pure__));
# 333 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strcasestr(const char *, const char *) __attribute__((__pure__));
# 344 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern size_t strcspn(const char *__s, const char *__reject) __attribute__((__pure__));
# 364 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strdup(const char *s1);
# 377 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern size_t strlcat(char *, const char *, size_t);
# 388 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern size_t strlcpy(char *, const char *, size_t);
# 399 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern size_t strlen(const char *) __attribute__((__pure__));
# 411 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strlwr(char *);
# 422 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strncat(char *, const char *, size_t);
# 434 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern int strncmp(const char *, const char *, size_t) __attribute__((__pure__));
# 449 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strncpy(char *, const char *, size_t);
# 464 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern int strncasecmp(const char *, const char *, size_t) __attribute__((__pure__));
# 478 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern size_t strnlen(const char *, size_t) __attribute__((__pure__));
# 491 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strpbrk(const char *__s, const char *__accept) __attribute__((__pure__));
# 505 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strrchr(const char *, int) __attribute__((__pure__));
# 515 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strrev(char *);
# 533 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strsep(char **, const char *);
# 544 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern size_t strspn(const char *__s, const char *__accept) __attribute__((__pure__));
# 557 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strstr(const char *, const char *) __attribute__((__pure__));
# 576 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strtok(char *, const char *);
# 593 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strtok_r(char *, const char *, char **);
# 606 "/home/whistleblower/.platformio/packages/toolchain-atmelavr/avr/include/string.h" 3
extern char *strupr(char *);



extern int strcoll(const char *s1, const char *s2);
extern char *strerror(int errnum);
extern size_t strxfrm(char *dest, const char *src, size_t n);



}
# 29 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 2
# 54 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"

# 54 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
KeccakCore::KeccakCore()
    : _blockSize(8)
{
    memset(state.A, 0, sizeof(state.A));
    state.inputSize = 0;
    state.outputSize = 0;
}





KeccakCore::~KeccakCore()
{
    clean(state);
}






size_t KeccakCore::capacity() const
{
    return 1600 - ((size_t)_blockSize) * 8;
}
# 94 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
void KeccakCore::setCapacity(size_t capacity)
{
    _blockSize = (1600 - capacity) / 8;
    reset();
}
# 114 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
void KeccakCore::reset()
{
    memset(state.A, 0, sizeof(state.A));
    state.inputSize = 0;
    state.outputSize = 0;
}
# 133 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
void KeccakCore::update(const void *data, size_t size)
{

    state.outputSize = 0;


    const uint8_t *d = (const uint8_t *)data;
    while (size > 0) {
        uint8_t len = _blockSize - state.inputSize;
        if (len > size)
            len = size;
        uint8_t *Abytes = ((uint8_t *)state.A) + state.inputSize;
        for (uint8_t posn = 0; posn < len; ++posn)
            Abytes[posn] ^= d[posn];
        state.inputSize += len;
        size -= len;
        d += len;
        if (state.inputSize == _blockSize) {
            keccakp();
            state.inputSize = 0;
        }
    }
}
# 167 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
void KeccakCore::pad(uint8_t tag)
{





    uint8_t size = state.inputSize;
    uint64_t *Awords = &(state.A[0][0]);
    Awords[size / 8] ^= (((uint64_t)tag) << ((size % 8) * 8));
    Awords[(_blockSize - 1) / 8] ^= 0x8000000000000000ULL;
    keccakp();
    state.inputSize = 0;
    state.outputSize = 0;
}
# 194 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
void KeccakCore::extract(void *data, size_t size)
{

    state.inputSize = 0;


    uint8_t *d = (uint8_t *)data;
    uint8_t tempSize;
    while (size > 0) {

        if (state.outputSize >= _blockSize) {
            keccakp();
            state.outputSize = 0;
        }


        tempSize = _blockSize - state.outputSize;
        if (tempSize > size)
            tempSize = size;


        memcpy(d, ((uint8_t *)(state.A)) + state.outputSize, tempSize);
        state.outputSize += tempSize;
        size -= tempSize;
        d += tempSize;
    }
}
# 240 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
void KeccakCore::encrypt(void *output, const void *input, size_t size)
{

    state.inputSize = 0;


    uint8_t *out = (uint8_t *)output;
    const uint8_t *in = (const uint8_t *)input;
    uint8_t tempSize;
    while (size > 0) {

        if (state.outputSize >= _blockSize) {
            keccakp();
            state.outputSize = 0;
        }


        tempSize = _blockSize - state.outputSize;
        if (tempSize > size)
            tempSize = size;


        const uint8_t *d = ((const uint8_t *)(state.A)) + state.outputSize;
        for (uint8_t index = 0; index < tempSize; ++index)
            out[index] = in[index] ^ d[index];
        state.outputSize += tempSize;
        size -= tempSize;
        out += tempSize;
        in += tempSize;
    }
}




void KeccakCore::clear()
{
    clean(state);
}
# 293 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
void KeccakCore::setHMACKey(const void *key, size_t len, uint8_t pad, size_t hashSize)
{
    uint8_t *Abytes = (uint8_t *)state.A;
    size_t size = blockSize();
    reset();
    if (len <= size) {



        memcpy(Abytes, key, len);
    } else {




        update(key, len);
        this->pad(0x06);
        memset(Abytes + hashSize, pad, size - hashSize);
        memset(Abytes + size, 0, sizeof(state.A) - size);
        size = hashSize;
    }
    while (size > 0) {
        *Abytes++ ^= pad;
        --size;
    }
    keccakp();
}




void KeccakCore::keccakp()
{
    uint64_t B[5][5];




    for (uint8_t round = 0; round < 24; ++round) {
    __asm__ __volatile__ (
        "push r29\n"
        "push r28\n"
        "mov r28,r26\n"
        "mov r29,r27\n"


        "ldi r20,5\n"
        "100:\n"
        "ld r8,Z\n"
        "ldd r9,Z+1\n"
        "ldd r10,Z+2\n"
        "ldd r11,Z+3\n"
        "ldd r12,Z+4\n"
        "ldd r13,Z+5\n"
        "ldd r14,Z+6\n"
        "ldd r15,Z+7\n"
        "ldi r19,4\n"
        "101:\n"
        "adiw r30,40\n"
        "ld __tmp_reg__,Z\n"
        "eor r8,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+1\n"
        "eor r9,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+2\n"
        "eor r10,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+3\n"
        "eor r11,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+4\n"
        "eor r12,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+5\n"
        "eor r13,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+6\n"
        "eor r14,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+7\n"
        "eor r15,__tmp_reg__\n"
        "dec r19\n"
        "brne 101b\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "subi r30,152\n"
        "sbc r31,__zero_reg__\n"
        "dec r20\n"
        "brne 100b\n"
        "sbiw r30,40\n"
        "sbiw r26,40\n"


        "ldd r8,Y+8\n"
        "ldd r9,Y+9\n"
        "ldd r10,Y+10\n"
        "ldd r11,Y+11\n"
        "ldd r12,Y+12\n"
        "ldd r13,Y+13\n"
        "ldd r14,Y+14\n"
        "ldd r15,Y+15\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "ldd __tmp_reg__,Y+32\n"
        "eor r8,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+33\n"
        "eor r9,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+34\n"
        "eor r10,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+35\n"
        "eor r11,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+36\n"
        "eor r12,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+37\n"
        "eor r13,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+38\n"
        "eor r14,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+39\n"
        "eor r15,__tmp_reg__\n"
        "ldi r19,5\n"
        "103:\n"
        "ld __tmp_reg__,Z\n"
        "eor __tmp_reg__,r8\n"
        "st Z,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+1\n"
        "eor __tmp_reg__,r9\n"
        "std Z+1,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+2\n"
        "eor __tmp_reg__,r10\n"
        "std Z+2,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+3\n"
        "eor __tmp_reg__,r11\n"
        "std Z+3,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+4\n"
        "eor __tmp_reg__,r12\n"
        "std Z+4,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+5\n"
        "eor __tmp_reg__,r13\n"
        "std Z+5,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+6\n"
        "eor __tmp_reg__,r14\n"
        "std Z+6,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+7\n"
        "eor __tmp_reg__,r15\n"
        "std Z+7,__tmp_reg__\n"
        "adiw r30,40\n"
        "dec r19\n"
        "brne 103b\n"
        "subi r30,192\n"
        "sbc r31,__zero_reg__\n"
        "ldd r8,Y+16\n"
        "ldd r9,Y+17\n"
        "ldd r10,Y+18\n"
        "ldd r11,Y+19\n"
        "ldd r12,Y+20\n"
        "ldd r13,Y+21\n"
        "ldd r14,Y+22\n"
        "ldd r15,Y+23\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "ld __tmp_reg__,Y\n"
        "eor r8,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+1\n"
        "eor r9,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+2\n"
        "eor r10,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+3\n"
        "eor r11,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+4\n"
        "eor r12,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+5\n"
        "eor r13,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+6\n"
        "eor r14,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+7\n"
        "eor r15,__tmp_reg__\n"
        "ldi r19,5\n"
        "104:\n"
        "ld __tmp_reg__,Z\n"
        "eor __tmp_reg__,r8\n"
        "st Z,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+1\n"
        "eor __tmp_reg__,r9\n"
        "std Z+1,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+2\n"
        "eor __tmp_reg__,r10\n"
        "std Z+2,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+3\n"
        "eor __tmp_reg__,r11\n"
        "std Z+3,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+4\n"
        "eor __tmp_reg__,r12\n"
        "std Z+4,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+5\n"
        "eor __tmp_reg__,r13\n"
        "std Z+5,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+6\n"
        "eor __tmp_reg__,r14\n"
        "std Z+6,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+7\n"
        "eor __tmp_reg__,r15\n"
        "std Z+7,__tmp_reg__\n"
        "adiw r30,40\n"
        "dec r19\n"
        "brne 104b\n"
        "subi r30,192\n"
        "sbc r31,__zero_reg__\n"
        "ldd r8,Y+24\n"
        "ldd r9,Y+25\n"
        "ldd r10,Y+26\n"
        "ldd r11,Y+27\n"
        "ldd r12,Y+28\n"
        "ldd r13,Y+29\n"
        "ldd r14,Y+30\n"
        "ldd r15,Y+31\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "ldd __tmp_reg__,Y+8\n"
        "eor r8,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+9\n"
        "eor r9,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+10\n"
        "eor r10,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+11\n"
        "eor r11,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+12\n"
        "eor r12,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+13\n"
        "eor r13,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+14\n"
        "eor r14,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+15\n"
        "eor r15,__tmp_reg__\n"
        "ldi r19,5\n"
        "105:\n"
        "ld __tmp_reg__,Z\n"
        "eor __tmp_reg__,r8\n"
        "st Z,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+1\n"
        "eor __tmp_reg__,r9\n"
        "std Z+1,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+2\n"
        "eor __tmp_reg__,r10\n"
        "std Z+2,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+3\n"
        "eor __tmp_reg__,r11\n"
        "std Z+3,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+4\n"
        "eor __tmp_reg__,r12\n"
        "std Z+4,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+5\n"
        "eor __tmp_reg__,r13\n"
        "std Z+5,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+6\n"
        "eor __tmp_reg__,r14\n"
        "std Z+6,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+7\n"
        "eor __tmp_reg__,r15\n"
        "std Z+7,__tmp_reg__\n"
        "adiw r30,40\n"
        "dec r19\n"
        "brne 105b\n"
        "subi r30,192\n"
        "sbc r31,__zero_reg__\n"
        "ldd r8,Y+32\n"
        "ldd r9,Y+33\n"
        "ldd r10,Y+34\n"
        "ldd r11,Y+35\n"
        "ldd r12,Y+36\n"
        "ldd r13,Y+37\n"
        "ldd r14,Y+38\n"
        "ldd r15,Y+39\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "ldd __tmp_reg__,Y+16\n"
        "eor r8,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+17\n"
        "eor r9,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+18\n"
        "eor r10,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+19\n"
        "eor r11,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+20\n"
        "eor r12,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+21\n"
        "eor r13,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+22\n"
        "eor r14,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+23\n"
        "eor r15,__tmp_reg__\n"
        "ldi r19,5\n"
        "106:\n"
        "ld __tmp_reg__,Z\n"
        "eor __tmp_reg__,r8\n"
        "st Z,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+1\n"
        "eor __tmp_reg__,r9\n"
        "std Z+1,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+2\n"
        "eor __tmp_reg__,r10\n"
        "std Z+2,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+3\n"
        "eor __tmp_reg__,r11\n"
        "std Z+3,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+4\n"
        "eor __tmp_reg__,r12\n"
        "std Z+4,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+5\n"
        "eor __tmp_reg__,r13\n"
        "std Z+5,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+6\n"
        "eor __tmp_reg__,r14\n"
        "std Z+6,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+7\n"
        "eor __tmp_reg__,r15\n"
        "std Z+7,__tmp_reg__\n"
        "adiw r30,40\n"
        "dec r19\n"
        "brne 106b\n"
        "subi r30,192\n"
        "sbc r31,__zero_reg__\n"
        "ld r8,Y\n"
        "ldd r9,Y+1\n"
        "ldd r10,Y+2\n"
        "ldd r11,Y+3\n"
        "ldd r12,Y+4\n"
        "ldd r13,Y+5\n"
        "ldd r14,Y+6\n"
        "ldd r15,Y+7\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "ldd __tmp_reg__,Y+24\n"
        "eor r8,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+25\n"
        "eor r9,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+26\n"
        "eor r10,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+27\n"
        "eor r11,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+28\n"
        "eor r12,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+29\n"
        "eor r13,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+30\n"
        "eor r14,__tmp_reg__\n"
        "ldd __tmp_reg__,Y+31\n"
        "eor r15,__tmp_reg__\n"
        "ldi r19,5\n"
        "107:\n"
        "ld __tmp_reg__,Z\n"
        "eor __tmp_reg__,r8\n"
        "st Z,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+1\n"
        "eor __tmp_reg__,r9\n"
        "std Z+1,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+2\n"
        "eor __tmp_reg__,r10\n"
        "std Z+2,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+3\n"
        "eor __tmp_reg__,r11\n"
        "std Z+3,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+4\n"
        "eor __tmp_reg__,r12\n"
        "std Z+4,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+5\n"
        "eor __tmp_reg__,r13\n"
        "std Z+5,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+6\n"
        "eor __tmp_reg__,r14\n"
        "std Z+6,__tmp_reg__\n"
        "ldd __tmp_reg__,Z+7\n"
        "eor __tmp_reg__,r15\n"
        "std Z+7,__tmp_reg__\n"
        "adiw r30,40\n"
        "dec r19\n"
        "brne 107b\n"
        "subi r30,232\n"
        "sbc r31,__zero_reg__\n"




        "ld r8,Z\n"
        "ldd r9,Z+1\n"
        "ldd r10,Z+2\n"
        "ldd r11,Z+3\n"
        "ldd r12,Z+4\n"
        "ldd r13,Z+5\n"
        "ldd r14,Z+6\n"
        "ldd r15,Z+7\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"


        "adiw r26,32\n"
        "ldd r8,Z+24\n"
        "ldd r9,Z+25\n"
        "ldd r10,Z+26\n"
        "ldd r11,Z+27\n"
        "ldd r12,Z+28\n"
        "ldd r13,Z+29\n"
        "ldd r14,Z+30\n"
        "ldd r15,Z+31\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"


        "adiw r26,32\n"
        "ldd r8,Z+8\n"
        "ldd r9,Z+9\n"
        "ldd r10,Z+10\n"
        "ldd r11,Z+11\n"
        "ldd r12,Z+12\n"
        "ldd r13,Z+13\n"
        "ldd r14,Z+14\n"
        "ldd r15,Z+15\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"


        "adiw r26,32\n"
        "ldd r8,Z+32\n"
        "ldd r9,Z+33\n"
        "ldd r10,Z+34\n"
        "ldd r11,Z+35\n"
        "ldd r12,Z+36\n"
        "ldd r13,Z+37\n"
        "ldd r14,Z+38\n"
        "ldd r15,Z+39\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"


        "adiw r26,32\n"
        "ldd r8,Z+16\n"
        "ldd r9,Z+17\n"
        "ldd r10,Z+18\n"
        "ldd r11,Z+19\n"
        "ldd r12,Z+20\n"
        "ldd r13,Z+21\n"
        "ldd r14,Z+22\n"
        "ldd r15,Z+23\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"


        "subi r26,160\n"
        "sbc r27,__zero_reg__\n"
        "adiw r30,40\n"
        "ldd r8,Z+8\n"
        "ldd r9,Z+9\n"
        "ldd r10,Z+10\n"
        "ldd r11,Z+11\n"
        "ldd r12,Z+12\n"
        "ldd r13,Z+13\n"
        "ldd r14,Z+14\n"
        "ldd r15,Z+15\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"


        "adiw r26,32\n"
        "ldd r8,Z+32\n"
        "ldd r9,Z+33\n"
        "ldd r10,Z+34\n"
        "ldd r11,Z+35\n"
        "ldd r12,Z+36\n"
        "ldd r13,Z+37\n"
        "ldd r14,Z+38\n"
        "ldd r15,Z+39\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"


        "adiw r26,32\n"
        "ldd r8,Z+16\n"
        "ldd r9,Z+17\n"
        "ldd r10,Z+18\n"
        "ldd r11,Z+19\n"
        "ldd r12,Z+20\n"
        "ldd r13,Z+21\n"
        "ldd r14,Z+22\n"
        "ldd r15,Z+23\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"


        "adiw r26,32\n"
        "ld r8,Z\n"
        "ldd r9,Z+1\n"
        "ldd r10,Z+2\n"
        "ldd r11,Z+3\n"
        "ldd r12,Z+4\n"
        "ldd r13,Z+5\n"
        "ldd r14,Z+6\n"
        "ldd r15,Z+7\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"


        "adiw r26,32\n"
        "ldd r8,Z+24\n"
        "ldd r9,Z+25\n"
        "ldd r10,Z+26\n"
        "ldd r11,Z+27\n"
        "ldd r12,Z+28\n"
        "ldd r13,Z+29\n"
        "ldd r14,Z+30\n"
        "ldd r15,Z+31\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"


        "subi r26,160\n"
        "sbc r27,__zero_reg__\n"
        "adiw r30,40\n"
        "ldd r8,Z+16\n"
        "ldd r9,Z+17\n"
        "ldd r10,Z+18\n"
        "ldd r11,Z+19\n"
        "ldd r12,Z+20\n"
        "ldd r13,Z+21\n"
        "ldd r14,Z+22\n"
        "ldd r15,Z+23\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"


        "adiw r26,32\n"
        "ld r8,Z\n"
        "ldd r9,Z+1\n"
        "ldd r10,Z+2\n"
        "ldd r11,Z+3\n"
        "ldd r12,Z+4\n"
        "ldd r13,Z+5\n"
        "ldd r14,Z+6\n"
        "ldd r15,Z+7\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"


        "adiw r26,32\n"
        "ldd r8,Z+24\n"
        "ldd r9,Z+25\n"
        "ldd r10,Z+26\n"
        "ldd r11,Z+27\n"
        "ldd r12,Z+28\n"
        "ldd r13,Z+29\n"
        "ldd r14,Z+30\n"
        "ldd r15,Z+31\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"


        "adiw r26,32\n"
        "ldd r8,Z+8\n"
        "ldd r9,Z+9\n"
        "ldd r10,Z+10\n"
        "ldd r11,Z+11\n"
        "ldd r12,Z+12\n"
        "ldd r13,Z+13\n"
        "ldd r14,Z+14\n"
        "ldd r15,Z+15\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"


        "adiw r26,32\n"
        "ldd r8,Z+32\n"
        "ldd r9,Z+33\n"
        "ldd r10,Z+34\n"
        "ldd r11,Z+35\n"
        "ldd r12,Z+36\n"
        "ldd r13,Z+37\n"
        "ldd r14,Z+38\n"
        "ldd r15,Z+39\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"


        "subi r26,160\n"
        "sbc r27,__zero_reg__\n"
        "adiw r30,40\n"
        "ldd r8,Z+24\n"
        "ldd r9,Z+25\n"
        "ldd r10,Z+26\n"
        "ldd r11,Z+27\n"
        "ldd r12,Z+28\n"
        "ldd r13,Z+29\n"
        "ldd r14,Z+30\n"
        "ldd r15,Z+31\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"


        "adiw r26,32\n"
        "ldd r8,Z+8\n"
        "ldd r9,Z+9\n"
        "ldd r10,Z+10\n"
        "ldd r11,Z+11\n"
        "ldd r12,Z+12\n"
        "ldd r13,Z+13\n"
        "ldd r14,Z+14\n"
        "ldd r15,Z+15\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"


        "adiw r26,32\n"
        "ldd r8,Z+32\n"
        "ldd r9,Z+33\n"
        "ldd r10,Z+34\n"
        "ldd r11,Z+35\n"
        "ldd r12,Z+36\n"
        "ldd r13,Z+37\n"
        "ldd r14,Z+38\n"
        "ldd r15,Z+39\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"


        "adiw r26,32\n"
        "ldd r8,Z+16\n"
        "ldd r9,Z+17\n"
        "ldd r10,Z+18\n"
        "ldd r11,Z+19\n"
        "ldd r12,Z+20\n"
        "ldd r13,Z+21\n"
        "ldd r14,Z+22\n"
        "ldd r15,Z+23\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"


        "adiw r26,32\n"
        "ld r8,Z\n"
        "ldd r9,Z+1\n"
        "ldd r10,Z+2\n"
        "ldd r11,Z+3\n"
        "ldd r12,Z+4\n"
        "ldd r13,Z+5\n"
        "ldd r14,Z+6\n"
        "ldd r15,Z+7\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"


        "subi r26,160\n"
        "sbc r27,__zero_reg__\n"
        "adiw r30,40\n"
        "ldd r8,Z+32\n"
        "ldd r9,Z+33\n"
        "ldd r10,Z+34\n"
        "ldd r11,Z+35\n"
        "ldd r12,Z+36\n"
        "ldd r13,Z+37\n"
        "ldd r14,Z+38\n"
        "ldd r15,Z+39\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"


        "adiw r26,32\n"
        "ldd r8,Z+16\n"
        "ldd r9,Z+17\n"
        "ldd r10,Z+18\n"
        "ldd r11,Z+19\n"
        "ldd r12,Z+20\n"
        "ldd r13,Z+21\n"
        "ldd r14,Z+22\n"
        "ldd r15,Z+23\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "bst r8,0\n"
        "ror r15\n"
        "ror r14\n"
        "ror r13\n"
        "ror r12\n"
        "ror r11\n"
        "ror r10\n"
        "ror r9\n"
        "ror r8\n"
        "bld r15,7\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"


        "adiw r26,32\n"
        "ld r8,Z\n"
        "ldd r9,Z+1\n"
        "ldd r10,Z+2\n"
        "ldd r11,Z+3\n"
        "ldd r12,Z+4\n"
        "ldd r13,Z+5\n"
        "ldd r14,Z+6\n"
        "ldd r15,Z+7\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"


        "adiw r26,32\n"
        "ldd r8,Z+24\n"
        "ldd r9,Z+25\n"
        "ldd r10,Z+26\n"
        "ldd r11,Z+27\n"
        "ldd r12,Z+28\n"
        "ldd r13,Z+29\n"
        "ldd r14,Z+30\n"
        "ldd r15,Z+31\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "st X+,r8\n"


        "adiw r26,32\n"
        "ldd r8,Z+8\n"
        "ldd r9,Z+9\n"
        "ldd r10,Z+10\n"
        "ldd r11,Z+11\n"
        "ldd r12,Z+12\n"
        "ldd r13,Z+13\n"
        "ldd r14,Z+14\n"
        "ldd r15,Z+15\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "lsl r8\n"
        "rol r9\n"
        "rol r10\n"
        "rol r11\n"
        "rol r12\n"
        "rol r13\n"
        "rol r14\n"
        "rol r15\n"
        "adc r8, __zero_reg__\n"
        "st X+,r8\n"
        "st X+,r9\n"
        "st X+,r10\n"
        "st X+,r11\n"
        "st X+,r12\n"
        "st X+,r13\n"
        "st X+,r14\n"
        "st X+,r15\n"
        "subi r26,200\n"
        "sbc r27,__zero_reg__\n"
        "subi r30,160\n"
        "sbc r31,__zero_reg__\n"


        "ldi r20,5\n"
        "50:\n"
        "ld r8,Y\n"
        "ldd r9,Y+8\n"
        "ldd r10,Y+16\n"
        "ldd r11,Y+24\n"
        "ldd r12,Y+32\n"
        "mov r13,r9\n"
        "com r13\n"
        "and r13,r10\n"
        "eor r13,r8\n"
        "mov r14,r10\n"
        "com r14\n"
        "and r14,r11\n"
        "eor r14,r9\n"
        "mov r15,r11\n"
        "com r15\n"
        "and r15,r12\n"
        "eor r15,r10\n"
        "mov r17,r12\n"
        "com r17\n"
        "and r17,r8\n"
        "eor r17,r11\n"
        "mov r16,r8\n"
        "com r16\n"
        "and r16,r9\n"
        "eor r16,r12\n"
        "st Z,r13\n"
        "std Z+8,r14\n"
        "std Z+16,r15\n"
        "std Z+24,r17\n"
        "std Z+32,r16\n"
        "ldd r8,Y+1\n"
        "ldd r9,Y+9\n"
        "ldd r10,Y+17\n"
        "ldd r11,Y+25\n"
        "ldd r12,Y+33\n"
        "mov r13,r9\n"
        "com r13\n"
        "and r13,r10\n"
        "eor r13,r8\n"
        "mov r14,r10\n"
        "com r14\n"
        "and r14,r11\n"
        "eor r14,r9\n"
        "mov r15,r11\n"
        "com r15\n"
        "and r15,r12\n"
        "eor r15,r10\n"
        "mov r17,r12\n"
        "com r17\n"
        "and r17,r8\n"
        "eor r17,r11\n"
        "mov r16,r8\n"
        "com r16\n"
        "and r16,r9\n"
        "eor r16,r12\n"
        "std Z+1,r13\n"
        "std Z+9,r14\n"
        "std Z+17,r15\n"
        "std Z+25,r17\n"
        "std Z+33,r16\n"
        "ldd r8,Y+2\n"
        "ldd r9,Y+10\n"
        "ldd r10,Y+18\n"
        "ldd r11,Y+26\n"
        "ldd r12,Y+34\n"
        "mov r13,r9\n"
        "com r13\n"
        "and r13,r10\n"
        "eor r13,r8\n"
        "mov r14,r10\n"
        "com r14\n"
        "and r14,r11\n"
        "eor r14,r9\n"
        "mov r15,r11\n"
        "com r15\n"
        "and r15,r12\n"
        "eor r15,r10\n"
        "mov r17,r12\n"
        "com r17\n"
        "and r17,r8\n"
        "eor r17,r11\n"
        "mov r16,r8\n"
        "com r16\n"
        "and r16,r9\n"
        "eor r16,r12\n"
        "std Z+2,r13\n"
        "std Z+10,r14\n"
        "std Z+18,r15\n"
        "std Z+26,r17\n"
        "std Z+34,r16\n"
        "ldd r8,Y+3\n"
        "ldd r9,Y+11\n"
        "ldd r10,Y+19\n"
        "ldd r11,Y+27\n"
        "ldd r12,Y+35\n"
        "mov r13,r9\n"
        "com r13\n"
        "and r13,r10\n"
        "eor r13,r8\n"
        "mov r14,r10\n"
        "com r14\n"
        "and r14,r11\n"
        "eor r14,r9\n"
        "mov r15,r11\n"
        "com r15\n"
        "and r15,r12\n"
        "eor r15,r10\n"
        "mov r17,r12\n"
        "com r17\n"
        "and r17,r8\n"
        "eor r17,r11\n"
        "mov r16,r8\n"
        "com r16\n"
        "and r16,r9\n"
        "eor r16,r12\n"
        "std Z+3,r13\n"
        "std Z+11,r14\n"
        "std Z+19,r15\n"
        "std Z+27,r17\n"
        "std Z+35,r16\n"
        "ldd r8,Y+4\n"
        "ldd r9,Y+12\n"
        "ldd r10,Y+20\n"
        "ldd r11,Y+28\n"
        "ldd r12,Y+36\n"
        "mov r13,r9\n"
        "com r13\n"
        "and r13,r10\n"
        "eor r13,r8\n"
        "mov r14,r10\n"
        "com r14\n"
        "and r14,r11\n"
        "eor r14,r9\n"
        "mov r15,r11\n"
        "com r15\n"
        "and r15,r12\n"
        "eor r15,r10\n"
        "mov r17,r12\n"
        "com r17\n"
        "and r17,r8\n"
        "eor r17,r11\n"
        "mov r16,r8\n"
        "com r16\n"
        "and r16,r9\n"
        "eor r16,r12\n"
        "std Z+4,r13\n"
        "std Z+12,r14\n"
        "std Z+20,r15\n"
        "std Z+28,r17\n"
        "std Z+36,r16\n"
        "ldd r8,Y+5\n"
        "ldd r9,Y+13\n"
        "ldd r10,Y+21\n"
        "ldd r11,Y+29\n"
        "ldd r12,Y+37\n"
        "mov r13,r9\n"
        "com r13\n"
        "and r13,r10\n"
        "eor r13,r8\n"
        "mov r14,r10\n"
        "com r14\n"
        "and r14,r11\n"
        "eor r14,r9\n"
        "mov r15,r11\n"
        "com r15\n"
        "and r15,r12\n"
        "eor r15,r10\n"
        "mov r17,r12\n"
        "com r17\n"
        "and r17,r8\n"
        "eor r17,r11\n"
        "mov r16,r8\n"
        "com r16\n"
        "and r16,r9\n"
        "eor r16,r12\n"
        "std Z+5,r13\n"
        "std Z+13,r14\n"
        "std Z+21,r15\n"
        "std Z+29,r17\n"
        "std Z+37,r16\n"
        "ldd r8,Y+6\n"
        "ldd r9,Y+14\n"
        "ldd r10,Y+22\n"
        "ldd r11,Y+30\n"
        "ldd r12,Y+38\n"
        "mov r13,r9\n"
        "com r13\n"
        "and r13,r10\n"
        "eor r13,r8\n"
        "mov r14,r10\n"
        "com r14\n"
        "and r14,r11\n"
        "eor r14,r9\n"
        "mov r15,r11\n"
        "com r15\n"
        "and r15,r12\n"
        "eor r15,r10\n"
        "mov r17,r12\n"
        "com r17\n"
        "and r17,r8\n"
        "eor r17,r11\n"
        "mov r16,r8\n"
        "com r16\n"
        "and r16,r9\n"
        "eor r16,r12\n"
        "std Z+6,r13\n"
        "std Z+14,r14\n"
        "std Z+22,r15\n"
        "std Z+30,r17\n"
        "std Z+38,r16\n"
        "ldd r8,Y+7\n"
        "ldd r9,Y+15\n"
        "ldd r10,Y+23\n"
        "ldd r11,Y+31\n"
        "ldd r12,Y+39\n"
        "mov r13,r9\n"
        "com r13\n"
        "and r13,r10\n"
        "eor r13,r8\n"
        "mov r14,r10\n"
        "com r14\n"
        "and r14,r11\n"
        "eor r14,r9\n"
        "mov r15,r11\n"
        "com r15\n"
        "and r15,r12\n"
        "eor r15,r10\n"
        "mov r17,r12\n"
        "com r17\n"
        "and r17,r8\n"
        "eor r17,r11\n"
        "mov r16,r8\n"
        "com r16\n"
        "and r16,r9\n"
        "eor r16,r12\n"
        "std Z+7,r13\n"
        "std Z+15,r14\n"
        "std Z+23,r15\n"
        "std Z+31,r17\n"
        "std Z+39,r16\n"
        "adiw r30,40\n"
        "adiw r28,40\n"
        "dec r20\n"
        "breq 51f\n"
        "rjmp 50b\n"
        "51:\n"
        "pop r28\n"
        "pop r29\n"


        : : "x"(B), "z"(state.A)
        : "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15",
          "r16", "r17", "r18", "r19", "r20", "r21", "memory"
    );
# 2001 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
        static uint64_t const RC[24] 
# 2001 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 3
                                    __attribute__((__progmem__)) 
# 2001 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
                                            = {
            0x0000000000000001ULL, 0x0000000000008082ULL, 0x800000000000808AULL,
            0x8000000080008000ULL, 0x000000000000808BULL, 0x0000000080000001ULL,
            0x8000000080008081ULL, 0x8000000000008009ULL, 0x000000000000008AULL,
            0x0000000000000088ULL, 0x0000000080008009ULL, 0x000000008000000AULL,
            0x000000008000808BULL, 0x800000000000008BULL, 0x8000000000008089ULL,
            0x8000000000008003ULL, 0x8000000000008002ULL, 0x8000000000000080ULL,
            0x000000000000800AULL, 0x800000008000000AULL, 0x8000000080008081ULL,
            0x8000000000008080ULL, 0x0000000080000001ULL, 0x8000000080008008ULL
        };
        state.A[0][0] ^= (__extension__ ({ const uint32_t *_temp = (const uint32_t *)(RC + round); ((uint64_t)
# 2011 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 3
                        (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(
# 2011 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
                        _temp
# 2011 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 3
                        )); uint32_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z+" "\n\t" "lpm %C0, Z+" "\n\t" "lpm %D0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))
# 2011 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
                        ) | (((uint64_t)
# 2011 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 3
                        (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(
# 2011 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
                        _temp + 1
# 2011 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp" 3
                        )); uint32_t __result; __asm__ __volatile__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z+" "\n\t" "lpm %C0, Z+" "\n\t" "lpm %D0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }))
# 2011 "/home/whistleblower/.platformio/lib/Crypto/KeccakCore.cpp"
                        ) << 32); }));
    }
}
